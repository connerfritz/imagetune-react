{"version":3,"sources":["../../src/components/ImageTune.js","App.js","index.js"],"names":["dataURItoFile","a","fetch","blob","File","type","ImageTuneComponent","width","height","quality","mode","onChange","e","props","processFile","event","options","container","Promise","Array","ImageTune","image","original_file","file","Select","value","setProperty","console","log","target","map","option","key","App","useState","setWidth","setHeight","setQuality","setType","setMode","setFile","files","onClick","src","URL","createObjectURL","ReactDOM","render","document","getElementById"],"mappings":"sSAGMA,EAAa,uCAAG,+BAAAC,EAAA,sEACMC,MAAP,GADC,8BACpB,OADoB,cACdC,EADc,yBAEb,IAAIC,KAAK,CAAT,KAAuB,CAACC,KAAMF,EAAKE,QAFtB,2CAAH,wDAKbC,EAAsB,SAAC,GAQvB,QAPJC,aAOI,MARuB,KAQvB,MANJC,cAMI,MARuB,KAQvB,MALJC,eAKI,MARuB,GAQvB,MAJJJ,YAII,MARuB,MAQvB,MAHJK,YAGI,MARuB,QAQvB,MAFJC,gBAEI,MAFQC,cAER,EADDC,EACC,iBAEEC,EAAW,uCAAG,+BAAAb,EAAA,6DAClBc,YAEMC,EAAU,CAAET,MAAF,EAASC,OAAT,EAAiBC,QAAjB,EAA0BJ,KAA1B,EAAgCK,QAC1CO,EAAY,IAAlB,aAJkB,SAMZC,QAAA,IAAYC,MAAA,KAAWJ,SAAX,kDAAmC,+BAAAd,EAAA,sEAC/BmB,WAApB,GADmD,cAC7CC,EAD6C,gBAEhCrB,EAAcqB,EAAOC,EAAxC,MAFmD,OAE7CC,EAF6C,OAGnDN,eAHmD,2CAAnC,wDANA,OAYlBF,eAAqBE,EAArBF,MACAJ,KAbkB,2CAAH,sDAgBjB,OACE,+EAA8CG,GADhD,KC5BIU,EAAS,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,MAAOT,EAA0B,EAA1BA,QAASU,EAAiB,EAAjBA,YAE/B,OADAC,QAAQC,IAAIZ,GAEV,4BAAQS,MAAOA,EAAOd,SAAU,SAACC,GAAOc,EAAYd,EAAEiB,OAAOJ,SAC1DT,EAAQc,KAAI,SAACC,GACZ,OAAQ,4BAAQC,IAAKD,GAASA,QA0DvBE,EApDH,WACV,MAA0BC,mBAAS,MAAnC,mBAAO3B,EAAP,KAAc4B,EAAd,KACA,EAA4BD,mBAAS,MAArC,mBAAO1B,EAAP,KAAe4B,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOzB,EAAP,KAAgB4B,EAAhB,KACA,EAAwBH,mBAAS,OAAjC,mBAAO7B,EAAP,KAAaiC,EAAb,KACA,EAAwBJ,mBAAS,SAAjC,mBAAOxB,EAAP,KAAa6B,EAAb,KACA,EAAwBL,mBAAS,MAAjC,mBAAOX,EAAP,KAAaiB,EAAb,KAGA,OACE,oCACIjB,EAyBE,KAxBF,6BACE,kDAEA,uCAEE,2BAAOlB,KAAK,SAASoB,MAAOlB,EAAOI,SAAU,SAACC,GAAOuB,EAASvB,EAAEiB,OAAOJ,WAEzE,wCAEE,2BAAOpB,KAAK,SAASoB,MAAOjB,EAAQG,SAAU,SAACC,GAAOwB,EAAUxB,EAAEiB,OAAOJ,WAE3E,yCAEE,2BAAOpB,KAAK,SAASoB,MAAOhB,EAASE,SAAU,SAACC,GAAOyB,EAAWzB,EAAEiB,OAAOJ,WAE7E,sCAEE,kBAAC,EAAD,CAAQA,MAAOpB,EAAMW,QAAS,CAAC,MAAO,MAAO,OAAQU,YAAaY,KAEpE,sCAEE,kBAAC,EAAD,CAAQb,MAAOf,EAAMM,QAAS,CAAC,QAAS,QAASU,YAAaa,MAIpE,+BACE,mDACA,kBAAC,EAAD,CAAgBhC,MAAOA,EAAOC,OAAQA,EAAQC,QAASA,EAASJ,KAAMA,EAAMK,KAAMA,EAAMC,SAAU,SAACC,GAAO4B,EAAQ5B,EAAEiB,OAAOY,MAAM,OAChIlB,EAAO,4BAAQmB,QAAS,SAAC9B,GAAQ4B,EAAQ,QAAlC,SAA4D,MAErEjB,EACC,6BACE,uDACA,6BAAK,yBAAKoB,IAAKC,IAAIC,gBAAgBtB,OAEnC,OC1DVuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.758a97e3.chunk.js","sourcesContent":["import React from 'react';\nimport ImageTune from  'imagetune';\n\nconst dataURItoFile = async (dataURI, name) => {\n  const blob = await (await fetch(dataURI)).blob();\n  return new File([blob], name, {type: blob.type});\n}\n\nconst ImageTuneComponent =  ({\n  width = 1024, \n  height = 1024, \n  quality = 80, \n  type = 'jpg',\n  mode = 'scale',\n  onChange = (e) => void 0, \n  ...props\n}) => {\n\n  const processFile = async (event) => {\n    event.persist();\n\n    const options = { width, height, quality, type, mode }\n    const container = new DataTransfer();\n\n    await Promise.all(Array.from(event.target.files).map(async (original_file) => {\n      const image = await ImageTune.tune(original_file, options);\n      const file = await dataURItoFile(image, original_file.name)\n      container.items.add(file);\n    }));\n    \n    event.target.files = container.files;\n    onChange(event);\n  }\n\n  return (\n    <input type=\"file\" accept=\"image/*\" onChange={processFile} {...props} />\n  )\n}\n\nexport default ImageTuneComponent;\n","import React, { useState } from 'react'\n\nimport { ImageTuneReact } from 'imagetune-react'\n\nimport './index.css';\n\nconst Select = ({value, options, setProperty}) => {\n  console.log(options)\n  return (\n    <select value={value} onChange={(e) => {setProperty(e.target.value)}}>\n      {options.map((option) => {\n        return (<option key={option}>{option}</option>);\n      })}\n    </select>\n  )\n}\n\nconst App = () => {\n  const [width, setWidth] = useState(1240);\n  const [height, setHeight] = useState(1240);\n  const [quality, setQuality] = useState(80);\n  const [type, setType] = useState('jpg');\n  const [mode, setMode] = useState('scale');\n  const [file, setFile] = useState(null)\n  \n\n  return (\n    <>\n      {!file ? (\n        <div>\n          <h3>ImageTune Settings</h3>\n          \n          <label>\n            Width\n            <input type=\"number\" value={width} onChange={(e) => {setWidth(e.target.value)}} />\n          </label>\n          <label>\n            Height\n            <input type=\"number\" value={height} onChange={(e) => {setHeight(e.target.value)}} />\n          </label>\n          <label>\n            Quality\n            <input type=\"number\" value={quality} onChange={(e) => {setQuality(e.target.value)}} />\n          </label>\n          <label>\n            Type\n            <Select value={type} options={['jpg', 'gif', 'png']} setProperty={setType} />\n          </label>\n          <label>\n            Mode\n            <Select value={mode} options={['scale', 'crop']} setProperty={setMode} />\n          </label>\n        </div>\n      ) : null}\n      <label>\n        <h3>ImageTune Component</h3>\n        <ImageTuneReact width={width} height={height} quality={quality} type={type} mode={mode} onChange={(e) => {setFile(e.target.files[0])}} />\n        {file ? <button onClick={(e) => { setFile(null) }}>Reset</button> : null}\n      </label>\n      {file ? (\n        <div>\n          <h3>Currently Selected File</h3>\n          <div><img src={URL.createObjectURL(file)} /></div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}